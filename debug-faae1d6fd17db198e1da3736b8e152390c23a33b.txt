[File being diffed : facebook/res/drawable/login_button.xml
Actions : 0
, File being diffed : facebook/res/drawable/login_button_focused.png
Actions : 0
, File being diffed : facebook/res/drawable/login_button_normal.png
Actions : 0
, File being diffed : facebook/res/drawable/login_button_pressed.png
Actions : 0
, File being diffed : facebook/res/values/strings.xml
Actions : 0
, File being diffed : facebook/src/com/facebook/FacebookActivity.java
Actions : 59
Update FieldRead at com.facebook.FacebookActivity:46
	sessionTracker to session
Update Invocation at com.facebook.FacebookActivity:46
	sessionTracker.getSession().onActivityResult(this, requestCode, resultCode, data) to session.onActivityResult(this, requestCode, resultCode, data)
Update BinaryOperator at com.facebook.FacebookActivity:114
	currentSession != null to (session) == null
Update Field at com.facebook.FacebookActivity:37
	private com.facebook.SessionTracker sessionTracker = new SessionTracker(new com.facebook.FacebookActivity.DefaultSessionStatusCallback()); to private Session callback = new com.facebook.FacebookActivity.DefaultSessionStatusCallback();
Update BinaryOperator at com.facebook.FacebookActivity:103
	currentSession != null to (session) == null
Update TypeAccess at com.facebook.FacebookActivity:165
	SessionLoginBehavior.SSO_WITH_FALLBACK to callback
Update BinaryOperator at com.facebook.FacebookActivity:92
	currentSession != null to (session) == null
Update BinaryOperator at com.facebook.FacebookActivity:145
	currentSession != null to (session) == null
Update Field at com.facebook.FacebookActivity:37
	private com.facebook.SessionTracker sessionTracker = new SessionTracker(new com.facebook.FacebookActivity.DefaultSessionStatusCallback()); to private Session callback = new com.facebook.FacebookActivity.DefaultSessionStatusCallback();
Delete VariableRead at com.facebook.FacebookActivity:103
	currentSession
Delete BinaryOperator at com.facebook.FacebookActivity:82
	(sessionTracker.getOpenSession()) != null
Delete VariableRead at com.facebook.FacebookActivity:114
	currentSession
Delete Block at com.facebook.FacebookActivity:180
	{
	    Session currentSession = sessionTracker.getSession();
	    if ((currentSession != null) && (!(currentSession.getState().getIsClosed()))) {
	        currentSession.open(this, null, behavior, activityCode);
	    } else {
	        Session.sessionOpen(this, applicationId, permissions, null, behavior, activityCode);
	    }
	}
Delete Literal at com.facebook.FacebookActivity:145
	null
Delete Literal at com.facebook.FacebookActivity:92
	null
Delete VariableRead at com.facebook.FacebookActivity:132
	currentSession
Delete Literal at com.facebook.FacebookActivity:103
	null
Delete VariableRead at com.facebook.FacebookActivity:92
	currentSession
Delete VariableRead at com.facebook.FacebookActivity:123
	currentSession
Delete VariableRead at com.facebook.FacebookActivity:133
	currentSession
Delete Invocation at com.facebook.FacebookActivity:165
	openSession(applicationId, permissions, SessionLoginBehavior.SSO_WITH_FALLBACK, Session.DEFAULT_AUTHORIZE_ACTIVITY_CODE)
Delete LocalVariable at com.facebook.FacebookActivity:131
	Session currentSession = sessionTracker.getOpenSession()
Delete LocalVariable at com.facebook.FacebookActivity:113
	Session currentSession = sessionTracker.getOpenSession()
Delete Method at com.facebook.FacebookActivity:49
	public void onDestroy() {
	    sessionTracker.setSession(null);
	}
Delete LocalVariable at com.facebook.FacebookActivity:121
	Session currentSession = sessionTracker.getOpenSession()
Delete LocalVariable at com.facebook.FacebookActivity:91
	Session currentSession = sessionTracker.getSession()
Delete LocalVariable at com.facebook.FacebookActivity:144
	Session currentSession = sessionTracker.getSession()
Delete VariableRead at com.facebook.FacebookActivity:122
	currentSession
Delete Method at com.facebook.FacebookActivity:72
	protected void setSession(com.facebook.Session newSession) {
	    sessionTracker.setSession(newSession);
	}
Delete Literal at com.facebook.FacebookActivity:114
	null
Delete VariableRead at com.facebook.FacebookActivity:145
	currentSession
Delete LocalVariable at com.facebook.FacebookActivity:102
	Session currentSession = sessionTracker.getOpenSession()
Insert Literal at com.facebook.FacebookActivity:79
	null
Insert FieldRead at com.facebook.FacebookActivity:116
	session
Insert Literal at com.facebook.FacebookActivity:89
	null
Insert Conditional at com.facebook.FacebookActivity:70
	(session) == null ? false : session.getIsOpened()
Insert FieldRead at com.facebook.FacebookActivity:107
	session
Insert Field at com.facebook.FacebookActivity:37
	private com.facebook.Session session;
Insert Block at com.facebook.FacebookActivity:161
	{
	    session = Session.sessionOpen(this, applicationId, permissions, callback, behavior, activityCode);
	}
Insert Literal at com.facebook.FacebookActivity:99
	null
Insert Literal at com.facebook.FacebookActivity:127
	null
Insert Assignment at com.facebook.FacebookActivity:147
	session = Session.sessionOpen(this, applicationId, permissions, callback)
Insert FieldRead at com.facebook.FacebookActivity:79
	session
Insert FieldRead at com.facebook.FacebookActivity:89
	session
Insert FieldRead at com.facebook.FacebookActivity:115
	(session)
Insert FieldRead at com.facebook.FacebookActivity:106
	(session)
Insert FieldRead at com.facebook.FacebookActivity:127
	session
Insert FieldRead at com.facebook.FacebookActivity:99
	session
Move VariableRead from com.facebook.FacebookActivity:165 to com.facebook.FacebookActivity:147
	permissions
Move TypeAccess from com.facebook.FacebookActivity:165 to com.facebook.FacebookActivity:147
	SessionLoginBehavior.SSO_WITH_FALLBACK
Move ThisAccess from com.facebook.FacebookActivity:185 to com.facebook.FacebookActivity:162
	this
Move TypeAccess from com.facebook.FacebookActivity:185 to com.facebook.FacebookActivity:162
	Session
Move VariableRead from com.facebook.FacebookActivity:185 to com.facebook.FacebookActivity:162
	behavior
Move VariableRead from com.facebook.FacebookActivity:185 to com.facebook.FacebookActivity:162
	applicationId
Move VariableRead from com.facebook.FacebookActivity:185 to com.facebook.FacebookActivity:162
	activityCode
Move FieldRead from com.facebook.FacebookActivity:46 to com.facebook.FacebookActivity:47
	sessionTracker
Move VariableRead from com.facebook.FacebookActivity:185 to com.facebook.FacebookActivity:162
	permissions
Move VariableRead from com.facebook.FacebookActivity:165 to com.facebook.FacebookActivity:147
	applicationId
Move Literal from com.facebook.FacebookActivity:82 to com.facebook.FacebookActivity:70
	null
, File being diffed : facebook/src/com/facebook/LoginView.java
Actions : 0
no AST change, File being diffed : facebook/src/com/facebook/Session.java
Actions : 19
no AST change, File being diffed : facebook/src/com/facebook/SessionTracker.java
Actions : 0
no AST change, File being diffed : facebook/tests/src/com/facebook/SessionTests.java
Actions : 173
Update TypeAccess at com.facebook.SessionTests:202
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update TypeAccess at com.facebook.SessionTests:97
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update LocalVariable at com.facebook.SessionTests:267
	MockTokenCache cache = new MockTokenCache(token , DEFAULT_TIMEOUT_MILLISECONDS) to com.facebook.SessionTests.MockTokenCache cache = new com.facebook.SessionTests.MockTokenCache(token , com.facebook.SessionTests.DEFAULT_TIMEOUT_MILLISECONDS)
Update Invocation at com.facebook.SessionTests:99
	WaitForBroadcastReceiver.incrementExpectCounts(receiver0, receiver2) to com.facebook.SessionTests.WaitForBroadcastReceiver.incrementExpectCounts(receiver0, receiver2)
Update ConstructorCall at com.facebook.SessionTests:203
	new MockTokenCache() to new com.facebook.SessionTests.MockTokenCache()
Update Invocation at com.facebook.SessionTests:343
	session.reauthorize(getStartedActivity(), reauthorizeRecorder, SessionLoginBehavior.SSO_WITH_FALLBACK, permissions, Session.DEFAULT_AUTHORIZE_ACTIVITY_CODE) to session.reauthorize(getStartedActivity(), reauthorizeRecorder, SessionLoginBehavior.SSO_WITH_FALLBACK, permissions, Session.DEFAULT_AUTHORIZE_ACTIVITY_CODE)
Update Invocation at com.facebook.SessionTests:143
	Session.unregisterActiveSessionReceiver(receiver0) to Session.unregisterActiveSessionReceiver(receiver0)
Update Invocation at com.facebook.SessionTests:95
	WaitForBroadcastReceiver.incrementExpectCounts(receiver0, receiver2) to com.facebook.SessionTests.WaitForBroadcastReceiver.incrementExpectCounts(receiver0, receiver2)
Update Invocation at com.facebook.SessionTests:136
	receiver2.waitForExpectedCalls() to receiver2.waitForExpectedCalls()
Update Invocation at com.facebook.SessionTests:189
	receiverSet.waitForExpectedCalls() to receiverSet.waitForExpectedCalls()
Update LocalVariable at com.facebook.SessionTests:295
	SessionStatusCallbackRecorder statusRecorder = new SessionStatusCallbackRecorder() to com.facebook.SessionTests.SessionStatusCallbackRecorder statusRecorder = new com.facebook.SessionTests.SessionStatusCallbackRecorder()
Update Invocation at com.facebook.SessionTests:322
	createScriptedSessionOnBlockerThread(cache) to createScriptedSessionOnBlockerThread(cache)
Update ConstructorCall at com.facebook.SessionTests:228
	new SessionStatusCallbackRecorder() to new com.facebook.SessionTests.SessionStatusCallbackRecorder()
Update ConstructorCall at com.facebook.SessionTests:321
	new MockTokenCache(null , 0) to new com.facebook.SessionTests.MockTokenCache(null , 0)
Update Invocation at com.facebook.SessionTests:208
	WaitForBroadcastReceiver.waitForExpectedCalls(receiverClosed, receiverUnset, receiverSet, receiverOpened) to com.facebook.SessionTests.WaitForBroadcastReceiver.waitForExpectedCalls(receiverClosed, receiverUnset, receiverSet, receiverOpened)
Update LocalVariable at com.facebook.SessionTests:46
	final WaitForBroadcastReceiver receiver0 = new WaitForBroadcastReceiver() to final com.facebook.SessionTests.WaitForBroadcastReceiver receiver0 = new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update Invocation at com.facebook.SessionTests:131
	receiver1.waitForExpectedCalls() to receiver1.waitForExpectedCalls()
Update Invocation at com.facebook.SessionTests:335
	cache.getSavedState() to cache.getSavedState()
Update Invocation at com.facebook.SessionTests:252
	(cache.getSavedState()) to (cache.getSavedState())
Update Invocation at com.facebook.SessionTests:237
	statusRecorder.waitForCall(session, SessionState.OPENING, null) to statusRecorder.waitForCall(session, SessionState.OPENING, null)
Update ConstructorCall at com.facebook.SessionTests:265
	new SessionStatusCallbackRecorder() to new com.facebook.SessionTests.SessionStatusCallbackRecorder()
Update Invocation at com.facebook.SessionTests:345
	reauthorizeRecorder.waitForCall(session, null) to reauthorizeRecorder.waitForCall(session, null)
Update TypeAccess at com.facebook.SessionTests:83
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update Invocation at com.facebook.SessionTests:282
	session.close() to session.close()
Update Invocation at com.facebook.SessionTests:59
	Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_SET)) to Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_SET))
Update LocalVariable at com.facebook.SessionTests:296
	MockTokenCache cache = new MockTokenCache(null , 0) to com.facebook.SessionTests.MockTokenCache cache = new com.facebook.SessionTests.MockTokenCache(null , 0)
Update Invocation at com.facebook.SessionTests:288
	statusRecorder.close() to statusRecorder.close()
Update LocalVariable at com.facebook.SessionTests:159
	final WaitForBroadcastReceiver receiverUnset = new WaitForBroadcastReceiver() to final com.facebook.SessionTests.WaitForBroadcastReceiver receiverUnset = new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update Invocation at com.facebook.SessionTests:256
	stall(STRAY_CALLBACK_WAIT_MILLISECONDS) to com.facebook.SessionTests.stall(com.facebook.SessionTests.STRAY_CALLBACK_WAIT_MILLISECONDS)
Update Invocation at com.facebook.SessionTests:248
	cache.getSavedState() to cache.getSavedState()
Update Invocation at com.facebook.SessionTests:61
	Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED)) to Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED))
Update Invocation at com.facebook.SessionTests:122
	Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED)) to Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED))
Update Invocation at com.facebook.SessionTests:335
	TokenCache.getToken(cache.getSavedState()) to TokenCache.getToken(cache.getSavedState())
Update Invocation at com.facebook.SessionTests:26
	super() to super()
Update Invocation at com.facebook.SessionTests:370
	reauthorizeRecorder.close() to reauthorizeRecorder.close()
Update Invocation at com.facebook.SessionTests:350
	cache.getSavedState() to cache.getSavedState()
Update LocalVariable at com.facebook.SessionTests:48
	final WaitForBroadcastReceiver receiver2 = new WaitForBroadcastReceiver() to final com.facebook.SessionTests.WaitForBroadcastReceiver receiver2 = new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update Invocation at com.facebook.SessionTests:214
	Session.unregisterActiveSessionReceiver(receiverOpened) to Session.unregisterActiveSessionReceiver(receiverOpened)
Update Invocation at com.facebook.SessionTests:134
	receiver2.incrementExpectCount() to receiver2.incrementExpectCount()
Update Invocation at com.facebook.SessionTests:328
	session.addAuthorizeResult(openToken) to session.addAuthorizeResult(openToken)
Update Invocation at com.facebook.SessionTests:66
	Session.registerActiveSessionReceiver(receiver2, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED)) to Session.registerActiveSessionReceiver(receiver2, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED))
Update Invocation at com.facebook.SessionTests:364
	TokenCache.getToken(cache.getSavedState()) to TokenCache.getToken(cache.getSavedState())
Update ConstructorCall at com.facebook.SessionTests:159
	new WaitForBroadcastReceiver() to new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update LocalVariable at com.facebook.SessionTests:268
	ScriptedSession session = createScriptedSessionOnBlockerThread("app-id", permissions, cache) to com.facebook.SessionTests.ScriptedSession session = createScriptedSessionOnBlockerThread("app-id", permissions, cache)
Update Invocation at com.facebook.SessionTests:118
	Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED)) to Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED))
Update Invocation at com.facebook.SessionTests:357
	session.reauthorize(getStartedActivity(), reauthorizeRecorder, SessionLoginBehavior.SSO_WITH_FALLBACK, permissions, Session.DEFAULT_AUTHORIZE_ACTIVITY_CODE) to session.reauthorize(getStartedActivity(), reauthorizeRecorder, SessionLoginBehavior.SSO_WITH_FALLBACK, permissions, Session.DEFAULT_AUTHORIZE_ACTIVITY_CODE)
Update Invocation at com.facebook.SessionTests:279
	(cache.getSavedState()) to (cache.getSavedState())
Update Invocation at com.facebook.SessionTests:268
	createScriptedSessionOnBlockerThread("app-id", permissions, cache) to createScriptedSessionOnBlockerThread("app-id", permissions, cache)
Update Invocation at com.facebook.SessionTests:105
	receiver0.waitForExpectedCalls() to receiver0.waitForExpectedCalls()
Update Invocation at com.facebook.SessionTests:75
	WaitForBroadcastReceiver.incrementExpectCounts(receiver0, receiver1, receiver2) to com.facebook.SessionTests.WaitForBroadcastReceiver.incrementExpectCounts(receiver0, receiver1, receiver2)
Update Invocation at com.facebook.SessionTests:113
	Session.unregisterActiveSessionReceiver(receiver0) to Session.unregisterActiveSessionReceiver(receiver0)
Update Invocation at com.facebook.SessionTests:306
	(cache.getSavedState()) to (cache.getSavedState())
Update ConstructorCall at com.facebook.SessionTests:158
	new WaitForBroadcastReceiver() to new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update LocalVariable at com.facebook.SessionTests:322
	ScriptedSession session = createScriptedSessionOnBlockerThread(cache) to com.facebook.SessionTests.ScriptedSession session = createScriptedSessionOnBlockerThread(cache)
Update Invocation at com.facebook.SessionTests:215
	Session.unregisterActiveSessionReceiver(receiverClosed) to Session.unregisterActiveSessionReceiver(receiverClosed)
Update Invocation at com.facebook.SessionTests:79
	WaitForBroadcastReceiver.incrementExpectCounts(receiver0, receiver1, receiver2) to com.facebook.SessionTests.WaitForBroadcastReceiver.incrementExpectCounts(receiver0, receiver1, receiver2)
Update Invocation at com.facebook.SessionTests:101
	WaitForBroadcastReceiver.waitForExpectedCalls(receiver0, receiver2) to com.facebook.SessionTests.WaitForBroadcastReceiver.waitForExpectedCalls(receiver0, receiver2)
Update Invocation at com.facebook.SessionTests:57
	Session.registerActiveSessionReceiver(receiver0, com.facebook.SessionTests.getActiveSessionAllFilter()) to Session.registerActiveSessionReceiver(receiver0, com.facebook.SessionTests.getActiveSessionAllFilter())
Update Invocation at com.facebook.SessionTests:283
	statusRecorder.waitForCall(session, SessionState.CLOSED, null) to statusRecorder.waitForCall(session, SessionState.CLOSED, null)
Update Invocation at com.facebook.SessionTests:329
	session.open(getStartedActivity(), statusRecorder) to session.open(getStartedActivity(), statusRecorder)
Update ConstructorCall at com.facebook.SessionTests:47
	new WaitForBroadcastReceiver() to new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update Invocation at com.facebook.SessionTests:68
	Session.registerActiveSessionReceiver(receiver2, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_CLOSED)) to Session.registerActiveSessionReceiver(receiver2, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_CLOSED))
Update ConstructorCall at com.facebook.SessionTests:296
	new MockTokenCache(null , 0) to new com.facebook.SessionTests.MockTokenCache(null , 0)
Update Invocation at com.facebook.SessionTests:229
	createScriptedSessionOnBlockerThread(cache) to createScriptedSessionOnBlockerThread(cache)
Update Invocation at com.facebook.SessionTests:368
	stall(STRAY_CALLBACK_WAIT_MILLISECONDS) to com.facebook.SessionTests.stall(com.facebook.SessionTests.STRAY_CALLBACK_WAIT_MILLISECONDS)
Update Invocation at com.facebook.SessionTests:171
	Session.registerActiveSessionReceiver(receiverUnset, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_UNSET)) to Session.registerActiveSessionReceiver(receiverUnset, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_UNSET))
Update Invocation at com.facebook.SessionTests:301
	session.open(getStartedActivity(), statusRecorder) to session.open(getStartedActivity(), statusRecorder)
Update TypeAccess at com.facebook.SessionTests:79
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update TypeAccess at com.facebook.SessionTests:101
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update Invocation at com.facebook.SessionTests:93
	Session.unregisterActiveSessionReceiver(receiver1) to Session.unregisterActiveSessionReceiver(receiver1)
Update Invocation at com.facebook.SessionTests:144
	Session.unregisterActiveSessionReceiver(receiver1) to Session.unregisterActiveSessionReceiver(receiver1)
Update Invocation at com.facebook.SessionTests:271
	session.getState() to session.getState()
Update Invocation at com.facebook.SessionTests:310
	stall(STRAY_CALLBACK_WAIT_MILLISECONDS) to com.facebook.SessionTests.stall(com.facebook.SessionTests.STRAY_CALLBACK_WAIT_MILLISECONDS)
Update LocalVariable at com.facebook.SessionTests:297
	ScriptedSession session = createScriptedSessionOnBlockerThread(cache) to com.facebook.SessionTests.ScriptedSession session = createScriptedSessionOnBlockerThread(cache)
Update Invocation at com.facebook.SessionTests:243
	session.close() to session.close()
Update Invocation at com.facebook.SessionTests:145
	Session.unregisterActiveSessionReceiver(receiver2) to Session.unregisterActiveSessionReceiver(receiver2)
Update Invocation at com.facebook.SessionTests:311
	statusRecorder.close() to statusRecorder.close()
Update Invocation at com.facebook.SessionTests:236
	session.open(getStartedActivity(), statusRecorder) to session.open(getStartedActivity(), statusRecorder)
Update Invocation at com.facebook.SessionTests:235
	session.addAuthorizeResult(openToken) to session.addAuthorizeResult(openToken)
Update LocalVariable at com.facebook.SessionTests:47
	final WaitForBroadcastReceiver receiver1 = new WaitForBroadcastReceiver() to final com.facebook.SessionTests.WaitForBroadcastReceiver receiver1 = new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update ConstructorCall at com.facebook.SessionTests:295
	new SessionStatusCallbackRecorder() to new com.facebook.SessionTests.SessionStatusCallbackRecorder()
Update TypeAccess at com.facebook.SessionTests:85
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update ConstructorCall at com.facebook.SessionTests:46
	new WaitForBroadcastReceiver() to new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update LocalVariable at com.facebook.SessionTests:158
	final WaitForBroadcastReceiver receiverSet = new WaitForBroadcastReceiver() to final com.facebook.SessionTests.WaitForBroadcastReceiver receiverSet = new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update Invocation at com.facebook.SessionTests:194
	receiverOpened.waitForExpectedCalls() to receiverOpened.waitForExpectedCalls()
Update Invocation at com.facebook.SessionTests:120
	Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED)) to Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED))
Update Invocation at com.facebook.SessionTests:103
	receiver0.incrementExpectCount() to receiver0.incrementExpectCount()
Update Invocation at com.facebook.SessionTests:186
	receiverSet.incrementExpectCount() to receiverSet.incrementExpectCount()
Update Invocation at com.facebook.SessionTests:346
	statusRecorder.waitForCall(session, SessionState.OPENED_TOKEN_UPDATED, null) to statusRecorder.waitForCall(session, SessionState.OPENED_TOKEN_UPDATED, null)
Update Invocation at com.facebook.SessionTests:334
	(cache.getSavedState()) to (cache.getSavedState())
Update Invocation at com.facebook.SessionTests:331
	statusRecorder.waitForCall(session, SessionState.OPENED, null) to statusRecorder.waitForCall(session, SessionState.OPENED, null)
Update Invocation at com.facebook.SessionTests:169
	Session.registerActiveSessionReceiver(receiverSet, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_SET)) to Session.registerActiveSessionReceiver(receiverSet, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_SET))
Update Invocation at com.facebook.SessionTests:287
	stall(STRAY_CALLBACK_WAIT_MILLISECONDS) to com.facebook.SessionTests.stall(com.facebook.SessionTests.STRAY_CALLBACK_WAIT_MILLISECONDS)
Update Invocation at com.facebook.SessionTests:129
	receiver2.incrementExpectCount() to receiver2.incrementExpectCount()
Update Invocation at com.facebook.SessionTests:356
	session.addAuthorizeResult(reauthorizeException) to session.addAuthorizeResult(reauthorizeException)
Update Invocation at com.facebook.SessionTests:364
	cache.getSavedState() to cache.getSavedState()
Update LocalVariable at com.facebook.SessionTests:265
	SessionStatusCallbackRecorder statusRecorder = new SessionStatusCallbackRecorder() to com.facebook.SessionTests.SessionStatusCallbackRecorder statusRecorder = new com.facebook.SessionTests.SessionStatusCallbackRecorder()
Update Invocation at com.facebook.SessionTests:359
	reauthorizeRecorder.waitForCall(session, reauthorizeException) to reauthorizeRecorder.waitForCall(session, reauthorizeException)
Update Invocation at com.facebook.SessionTests:107
	receiver0.incrementExpectCount() to receiver0.incrementExpectCount()
Update Invocation at com.facebook.SessionTests:349
	(cache.getSavedState()) to (cache.getSavedState())
Update Invocation at com.facebook.SessionTests:257
	statusRecorder.close() to statusRecorder.close()
Update ConstructorCall at com.facebook.SessionTests:156
	new WaitForBroadcastReceiver() to new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update Invocation at com.facebook.SessionTests:89
	receiver0.waitForExpectedCalls() to receiver0.waitForExpectedCalls()
Update ConstructorCall at com.facebook.SessionTests:267
	new MockTokenCache(token , DEFAULT_TIMEOUT_MILLISECONDS) to new com.facebook.SessionTests.MockTokenCache(token , com.facebook.SessionTests.DEFAULT_TIMEOUT_MILLISECONDS)
Update TypeAccess at com.facebook.SessionTests:99
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update Invocation at com.facebook.SessionTests:350
	TokenCache.getToken(cache.getSavedState()) to TokenCache.getToken(cache.getSavedState())
Update Invocation at com.facebook.SessionTests:81
	WaitForBroadcastReceiver.waitForExpectedCalls(receiver0, receiver1, receiver2) to com.facebook.SessionTests.WaitForBroadcastReceiver.waitForExpectedCalls(receiver0, receiver1, receiver2)
Update Invocation at com.facebook.SessionTests:273
	session.open(getStartedActivity(), statusRecorder) to session.open(getStartedActivity(), statusRecorder)
Update Invocation at com.facebook.SessionTests:244
	statusRecorder.waitForCall(session, SessionState.CLOSED, null) to statusRecorder.waitForCall(session, SessionState.CLOSED, null)
Update TypeAccess at com.facebook.SessionTests:75
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update Invocation at com.facebook.SessionTests:251
	session.closeAndClearTokenInformation() to session.closeAndClearTokenInformation()
Update Invocation at com.facebook.SessionTests:77
	WaitForBroadcastReceiver.waitForExpectedCalls(receiver0, receiver1, receiver2) to com.facebook.SessionTests.WaitForBroadcastReceiver.waitForExpectedCalls(receiver0, receiver1, receiver2)
Update ConstructorCall at com.facebook.SessionTests:182
	new MockTokenCache() to new com.facebook.SessionTests.MockTokenCache()
Update Invocation at com.facebook.SessionTests:167
	Session.registerActiveSessionReceiver(receiverClosed, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_CLOSED)) to Session.registerActiveSessionReceiver(receiverClosed, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_CLOSED))
Update LocalVariable at com.facebook.SessionTests:156
	final WaitForBroadcastReceiver receiverOpened = new WaitForBroadcastReceiver() to final com.facebook.SessionTests.WaitForBroadcastReceiver receiverOpened = new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update TypeAccess at com.facebook.SessionTests:81
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update LocalVariable at com.facebook.SessionTests:321
	MockTokenCache cache = new MockTokenCache(null , 0) to com.facebook.SessionTests.MockTokenCache cache = new com.facebook.SessionTests.MockTokenCache(null , 0)
Update Invocation at com.facebook.SessionTests:360
	statusRecorder.waitForCall(session, SessionState.CLOSED_LOGIN_FAILED, reauthorizeException) to statusRecorder.waitForCall(session, SessionState.CLOSED_LOGIN_FAILED, reauthorizeException)
Update Invocation at com.facebook.SessionTests:192
	receiverOpened.incrementExpectCount() to receiverOpened.incrementExpectCount()
Update LocalVariable at com.facebook.SessionTests:157
	final WaitForBroadcastReceiver receiverClosed = new WaitForBroadcastReceiver() to final com.facebook.SessionTests.WaitForBroadcastReceiver receiverClosed = new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update LocalVariable at com.facebook.SessionTests:320
	SessionReauthorizeCallbackRecorder reauthorizeRecorder = new SessionReauthorizeCallbackRecorder() to com.facebook.SessionTests.SessionReauthorizeCallbackRecorder reauthorizeRecorder = new com.facebook.SessionTests.SessionReauthorizeCallbackRecorder()
Update Invocation at com.facebook.SessionTests:216
	Session.unregisterActiveSessionReceiver(receiverSet) to Session.unregisterActiveSessionReceiver(receiverSet)
Update TypeAccess at com.facebook.SessionTests:77
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update ConstructorCall at com.facebook.SessionTests:157
	new WaitForBroadcastReceiver() to new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update ConstructorCall at com.facebook.SessionTests:48
	new WaitForBroadcastReceiver() to new com.facebook.SessionTests.WaitForBroadcastReceiver()
Update Invocation at com.facebook.SessionTests:369
	statusRecorder.close() to statusRecorder.close()
Update Invocation at com.facebook.SessionTests:276
	statusRecorder.waitForCall(session, SessionState.OPENED, null) to statusRecorder.waitForCall(session, SessionState.OPENED, null)
Update Invocation at com.facebook.SessionTests:300
	session.addAuthorizeResult(openException) to session.addAuthorizeResult(openException)
Update LocalVariable at com.facebook.SessionTests:227
	MockTokenCache cache = new MockTokenCache(null , 0) to com.facebook.SessionTests.MockTokenCache cache = new com.facebook.SessionTests.MockTokenCache(null , 0)
Update Invocation at com.facebook.SessionTests:248
	TokenCache.getToken(cache.getSavedState()) to TokenCache.getToken(cache.getSavedState())
Update Invocation at com.facebook.SessionTests:165
	Session.registerActiveSessionReceiver(receiverOpened, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED)) to Session.registerActiveSessionReceiver(receiverOpened, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_OPENED))
Update Invocation at com.facebook.SessionTests:238
	statusRecorder.waitForCall(session, SessionState.OPENED, null) to statusRecorder.waitForCall(session, SessionState.OPENED, null)
Update TypeAccess at com.facebook.SessionTests:208
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update Invocation at com.facebook.SessionTests:297
	createScriptedSessionOnBlockerThread(cache) to createScriptedSessionOnBlockerThread(cache)
Update Invocation at com.facebook.SessionTests:87
	receiver0.incrementExpectCount() to receiver0.incrementExpectCount()
Update Invocation at com.facebook.SessionTests:109
	receiver0.waitForExpectedCalls() to receiver0.waitForExpectedCalls()
Update Invocation at com.facebook.SessionTests:202
	WaitForBroadcastReceiver.incrementExpectCounts(receiverClosed, receiverUnset, receiverSet, receiverOpened) to com.facebook.SessionTests.WaitForBroadcastReceiver.incrementExpectCounts(receiverClosed, receiverUnset, receiverSet, receiverOpened)
Update Invocation at com.facebook.SessionTests:217
	Session.unregisterActiveSessionReceiver(receiverUnset) to Session.unregisterActiveSessionReceiver(receiverUnset)
Update ConstructorCall at com.facebook.SessionTests:320
	new SessionReauthorizeCallbackRecorder() to new com.facebook.SessionTests.SessionReauthorizeCallbackRecorder()
Update ConstructorCall at com.facebook.SessionTests:319
	new SessionStatusCallbackRecorder() to new com.facebook.SessionTests.SessionStatusCallbackRecorder()
Update Invocation at com.facebook.SessionTests:342
	session.addAuthorizeResult(reauthorizeToken) to session.addAuthorizeResult(reauthorizeToken)
Update TypeAccess at com.facebook.SessionTests:95
	WaitForBroadcastReceiver to com.facebook.SessionTests.WaitForBroadcastReceiver
Update Invocation at com.facebook.SessionTests:233
	session.getState() to session.getState()
Update Invocation at com.facebook.SessionTests:97
	WaitForBroadcastReceiver.waitForExpectedCalls(receiver0, receiver2) to com.facebook.SessionTests.WaitForBroadcastReceiver.waitForExpectedCalls(receiver0, receiver2)
Update Invocation at com.facebook.SessionTests:305
	statusRecorder.waitForCall(session, SessionState.CLOSED_LOGIN_FAILED, openException) to statusRecorder.waitForCall(session, SessionState.CLOSED_LOGIN_FAILED, openException)
Update Invocation at com.facebook.SessionTests:85
	WaitForBroadcastReceiver.waitForExpectedCalls(receiver0, receiver1) to com.facebook.SessionTests.WaitForBroadcastReceiver.waitForExpectedCalls(receiver0, receiver1)
Update Invocation at com.facebook.SessionTests:302
	statusRecorder.waitForCall(session, SessionState.OPENING, null) to statusRecorder.waitForCall(session, SessionState.OPENING, null)
Update LocalVariable at com.facebook.SessionTests:228
	SessionStatusCallbackRecorder statusRecorder = new SessionStatusCallbackRecorder() to com.facebook.SessionTests.SessionStatusCallbackRecorder statusRecorder = new com.facebook.SessionTests.SessionStatusCallbackRecorder()
Update Invocation at com.facebook.SessionTests:83
	WaitForBroadcastReceiver.incrementExpectCounts(receiver0, receiver1) to com.facebook.SessionTests.WaitForBroadcastReceiver.incrementExpectCounts(receiver0, receiver1)
Update Invocation at com.facebook.SessionTests:247
	(cache.getSavedState()) to (cache.getSavedState())
Update Invocation at com.facebook.SessionTests:132
	receiver2.waitForExpectedCalls() to receiver2.waitForExpectedCalls()
Update ConstructorCall at com.facebook.SessionTests:227
	new MockTokenCache(null , 0) to new com.facebook.SessionTests.MockTokenCache(null , 0)
Update Invocation at com.facebook.SessionTests:363
	(cache.getSavedState()) to (cache.getSavedState())
Update LocalVariable at com.facebook.SessionTests:229
	ScriptedSession session = createScriptedSessionOnBlockerThread(cache) to com.facebook.SessionTests.ScriptedSession session = createScriptedSessionOnBlockerThread(cache)
Update LocalVariable at com.facebook.SessionTests:319
	SessionStatusCallbackRecorder statusRecorder = new SessionStatusCallbackRecorder() to com.facebook.SessionTests.SessionStatusCallbackRecorder statusRecorder = new com.facebook.SessionTests.SessionStatusCallbackRecorder()
Update Invocation at com.facebook.SessionTests:330
	statusRecorder.waitForCall(session, SessionState.OPENING, null) to statusRecorder.waitForCall(session, SessionState.OPENING, null)
Update Invocation at com.facebook.SessionTests:128
	receiver1.incrementExpectCount(3) to receiver1.incrementExpectCount(3)
Update Invocation at com.facebook.SessionTests:63
	Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_CLOSED)) to Session.registerActiveSessionReceiver(receiver1, com.facebook.SessionTests.getActiveSessionFilter(Session.ACTION_ACTIVE_SESSION_CLOSED))
Insert Class at com.facebook.SessionTests:464
	private static class ScriptedSession extends Session {
	    private final java.util.LinkedList<com.facebook.SessionTests.ScriptedSession.AuthorizeResult> pendingAuthorizations = new java.util.LinkedList<com.facebook.SessionTests.ScriptedSession.AuthorizeResult>();
	
	    ScriptedSession(android.content.Context currentContext ,java.lang.String applicationId ,java.util.List<java.lang.String> permissions ,com.facebook.TokenCache tokenCache ,android.os.Handler handler) {
	        super(currentContext, applicationId, permissions, tokenCache, handler);
	    }
	
	    public void addAuthorizeResult(com.facebook.AccessToken token) {
	        pendingAuthorizations.add(new com.facebook.SessionTests.ScriptedSession.AuthorizeResult(token));
	    }
	
	    public void addAuthorizeResult(java.lang.Exception exception) {
	        pendingAuthorizations.add(new com.facebook.SessionTests.ScriptedSession.AuthorizeResult(exception));
	    }
	
	    @java.lang.Override
	    void authorize(final android.app.Activity currentActivity, final com.facebook.AuthRequest request) {
	        SdkRuntime.getExecutor().execute(new java.lang.Runnable() {
	            @java.lang.Override
	            public void run() {
	                com.facebook.SessionTests.stall(com.facebook.SessionTests.SIMULATED_WORKING_MILLISECONDS);
	                com.facebook.SessionTests.ScriptedSession.AuthorizeResult result = pendingAuthorizations.poll();
	                if (result == null) {
	                    fail("Missing call to addScriptedAuthorization");
	                } 
	                finishAuth(currentActivity, result.token, result.exception);
	            }
	        });
	    }
	
	    private static class AuthorizeResult {
	        final com.facebook.AccessToken token;
	
	        final java.lang.Exception exception;
	
	        private AuthorizeResult(com.facebook.AccessToken token ,java.lang.Exception exception) {
	            this.token = token;
	            this.exception = exception;
	        }
	
	        AuthorizeResult(com.facebook.AccessToken token) {
	            this(token, null);
	        }
	
	        AuthorizeResult(java.lang.Exception exception) {
	            this(null, exception);
	        }
	    }
	}
Insert Method at com.facebook.SessionTests:433
	private static void stall(int stallMsec) {
	    try {
	        java.lang.Thread.sleep(stallMsec);
	    } catch (java.lang.InterruptedException e) {
	        fail("InterruptedException while stalling");
	    }
	}
Insert Field at com.facebook.SessionTests:39
	private static final int DEFAULT_TIMEOUT_MILLISECONDS = 10 * 1000;
Insert Field at com.facebook.SessionTests:40
	private static final int SIMULATED_WORKING_MILLISECONDS = 20;
Insert Class at com.facebook.SessionTests:659
	static class WaitForBroadcastReceiver extends BroadcastReceiver {
	    static int idGenerator = 0;
	
	    final int id = (com.facebook.SessionTests.WaitForBroadcastReceiver.idGenerator)++;
	
	    android.os.ConditionVariable condition = new ConditionVariable(true);
	
	    int expectCount;
	
	    int actualCount;
	
	    public void incrementExpectCount() {
	        incrementExpectCount(1);
	    }
	
	    public void incrementExpectCount(int n) {
	        expectCount += n;
	        if ((actualCount) < (expectCount)) {
	            condition.close();
	        } 
	    }
	
	    public void waitForExpectedCalls() {
	        if (!(condition.block(com.facebook.SessionTests.DEFAULT_TIMEOUT_MILLISECONDS))) {
	            assertTrue(false);
	        } 
	    }
	
	    public static void incrementExpectCounts(com.facebook.SessionTests.WaitForBroadcastReceiver... receivers) {
	        for (com.facebook.SessionTests.WaitForBroadcastReceiver receiver : receivers) {
	            receiver.incrementExpectCount();
	        }
	    }
	
	    public static void waitForExpectedCalls(com.facebook.SessionTests.WaitForBroadcastReceiver... receivers) {
	        for (com.facebook.SessionTests.WaitForBroadcastReceiver receiver : receivers) {
	            receiver.waitForExpectedCalls();
	        }
	    }
	
	    @java.lang.Override
	    public void onReceive(android.content.Context context, android.content.Intent intent) {
	        if ((++(actualCount)) == (expectCount)) {
	            condition.open();
	        } 
	        assertTrue(((actualCount) <= (expectCount)));
	    }
	}
Insert Constructor at com.facebook.SessionTests:1
	2() {
	}
Insert Method at com.facebook.SessionTests:441
	private com.facebook.SessionTests.ScriptedSession createScriptedSessionOnBlockerThread(com.facebook.TokenCache cache) {
	    java.util.ArrayList<java.lang.String> permissions = new java.util.ArrayList<java.lang.String>();
	    return createScriptedSessionOnBlockerThread("SomeApplicationId", permissions, cache);
	}
Insert Constructor at com.facebook.SessionTests:1
	3() {
	}
Insert Method at com.facebook.SessionTests:446
	private com.facebook.SessionTests.ScriptedSession createScriptedSessionOnBlockerThread(final java.lang.String applicationId, final java.util.List<java.lang.String> permissions, final com.facebook.TokenCache cache) {
	    class MutableState {
	        com.facebook.SessionTests.ScriptedSession session;
	    }
	    final MutableState mutable = new MutableState();
	    runOnBlockerThread(new java.lang.Runnable() {
	        @java.lang.Override
	        public void run() {
	            mutable.session = new com.facebook.SessionTests.ScriptedSession(getStartedActivity() , applicationId , permissions , cache , null);
	        }
	    }, true);
	    return mutable.session;
	}
Insert Class at com.facebook.SessionTests:615
	static class MockTokenCache extends TokenCache {
	    private final java.lang.String token;
	
	    private final long expires_in;
	
	    private android.os.Bundle saved;
	
	    MockTokenCache() {
	        this("FakeToken", com.facebook.SessionTests.DEFAULT_TIMEOUT_MILLISECONDS);
	    }
	
	    MockTokenCache(java.lang.String token ,long expires_in) {
	        this.token = token;
	        this.expires_in = expires_in;
	        this.saved = null;
	    }
	
	    android.os.Bundle getSavedState() {
	        return saved;
	    }
	
	    @java.lang.Override
	    public android.os.Bundle load() {
	        Bundle bundle = null;
	        if ((token) != null) {
	            bundle = new Bundle();
	            TokenCache.putToken(bundle, token);
	            TokenCache.putExpirationMilliseconds(bundle, ((java.lang.System.currentTimeMillis()) + (expires_in)));
	        } 
	        return bundle;
	    }
	
	    @java.lang.Override
	    public void save(android.os.Bundle bundle) {
	        this.saved = bundle;
	    }
	
	    @java.lang.Override
	    public void clear() {
	        this.saved = null;
	    }
	}
Insert Field at com.facebook.SessionTests:41
	private static final int STRAY_CALLBACK_WAIT_MILLISECONDS = 50;
Insert Class at com.facebook.SessionTests:517
	private static class SessionReauthorizeCallbackRecorder implements Session {
	    private final java.util.concurrent.BlockingQueue<com.facebook.SessionTests.SessionReauthorizeCallbackRecorder.Call> calls = new java.util.concurrent.LinkedBlockingQueue<com.facebook.SessionTests.SessionReauthorizeCallbackRecorder.Call>();
	
	    volatile boolean isClosed = false;
	
	    void waitForCall(com.facebook.Session session, java.lang.Exception exception) {
	        com.facebook.SessionTests.SessionReauthorizeCallbackRecorder.Call call = null;
	        try {
	            call = calls.poll(com.facebook.SessionTests.DEFAULT_TIMEOUT_MILLISECONDS, java.util.concurrent.TimeUnit.MILLISECONDS);
	            if (call == null) {
	                fail("Did not get a reauthorize callback within timeout.");
	            } 
	        } catch (java.lang.InterruptedException e) {
	            fail(("InterruptedException while waiting for reauthorize: " + e));
	        }
	        assertEquals(session, call.session);
	        assertEquals(exception, call.exception);
	    }
	
	    void close() {
	        isClosed = true;
	        assertEquals(0, calls.size());
	    }
	
	    @java.lang.Override
	    public void call(com.facebook.Session session, java.lang.Exception exception) {
	        com.facebook.SessionTests.SessionReauthorizeCallbackRecorder.Call call = new com.facebook.SessionTests.SessionReauthorizeCallbackRecorder.Call(session , exception);
	        if (!(calls.offer(call))) {
	            fail("Test Error: Blocking queue ran out of capacity");
	        } 
	        if (isClosed) {
	            fail("Reauthorize callback called after closed");
	        } 
	    }
	
	    private static class Call {
	        final com.facebook.Session session;
	
	        final java.lang.Exception exception;
	
	        Call(com.facebook.Session session ,java.lang.Exception exception) {
	            this.session = session;
	            this.exception = exception;
	        }
	    }
	}
Insert Class at com.facebook.SessionTests:564
	private static class SessionStatusCallbackRecorder implements Session {
	    private final java.util.concurrent.BlockingQueue<com.facebook.SessionTests.SessionStatusCallbackRecorder.Call> calls = new java.util.concurrent.LinkedBlockingQueue<com.facebook.SessionTests.SessionStatusCallbackRecorder.Call>();
	
	    volatile boolean isClosed = false;
	
	    void waitForCall(com.facebook.Session session, com.facebook.SessionState state, java.lang.Exception exception) {
	        com.facebook.SessionTests.SessionStatusCallbackRecorder.Call call = null;
	        try {
	            call = calls.poll(com.facebook.SessionTests.DEFAULT_TIMEOUT_MILLISECONDS, java.util.concurrent.TimeUnit.MILLISECONDS);
	            if (call == null) {
	                fail("Did not get a status callback within timeout.");
	            } 
	        } catch (java.lang.InterruptedException e) {
	            fail(("InterruptedException while waiting for status callback: " + e));
	        }
	        assertEquals(session, call.session);
	        assertEquals(state, call.state);
	        assertEquals(exception, call.exception);
	    }
	
	    void close() {
	        isClosed = true;
	        assertEquals(0, calls.size());
	    }
	
	    @java.lang.Override
	    public void call(com.facebook.Session session, com.facebook.SessionState state, java.lang.Exception exception) {
	        com.facebook.SessionTests.SessionStatusCallbackRecorder.Call call = new com.facebook.SessionTests.SessionStatusCallbackRecorder.Call(session , state , exception);
	        if (!(calls.offer(call))) {
	            fail("Test Error: Blocking queue ran out of capacity");
	        } 
	        if (isClosed) {
	            fail("Reauthorize callback called after closed");
	        } 
	    }
	
	    private static class Call {
	        final com.facebook.Session session;
	
	        final com.facebook.SessionState state;
	
	        final java.lang.Exception exception;
	
	        Call(com.facebook.Session session ,com.facebook.SessionState state ,java.lang.Exception exception) {
	            this.session = session;
	            this.state = state;
	            this.exception = exception;
	        }
	    }
	}
Move Constructor from com.facebook.SessionTests$3:1 to com.facebook.SessionTests$4:1
	3() {
	}
Move Constructor from com.facebook.SessionTests$2:1 to com.facebook.SessionTests$ScriptedSession$1:1
	2() {
	}
, File being diffed : facebook/tests/src/com/facebook/SessionTestsBase.java
Actions : 0
no AST change, File being diffed : facebook/tests/src/com/facebook/SessionTrackerTests.java
Actions : 0
no AST change, Total actions size : 232]